name: Build and Deploy

on:
  workflow_call:
    inputs:
      # s3_bucket_name:
      #   required: true
      #   type: string
      # cloudfront_distribution_id:
      #   required: true
      #   type: string

env:
  AWS_REGION: us-east-1
  REPOSITORY_URI: ${{ secrets.REPOSITORY_URI }}
  PROD_REPOSITORY_URI: ${{ secrets.PROD_REPOSITORY_URI }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # PROD_AWS_ID: ${{ secrets.PROD_AWS_ID }}
  REPO: your-repo-name
  MAIN_BRANCH: main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

      - name: Pull cache image
        run: docker pull $REPOSITORY_URI:latest || true

      - name: Build Docker image
        run: |
          IMAGE_TAG=build-${{ github.run_id }}
          docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest . --build-arg GITHUB_TOKEN=$GITHUB_TOKEN
          docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

      - name: Push Docker images
        run: |
          docker push $REPOSITORY_URI:latest
          git clone https://bludot:${GITHUB_TOKEN}@github.com/TempMee/${REPO}.git ${REPO}
          cd ${REPO}
          git checkout ${MAIN_BRANCH}
          git fetch --tags
          export GITHUB_REF_NAME=$(git describe --tags --abbrev=0 --always)
          docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$GITHUB_REF_NAME
          docker tag $REPOSITORY_URI:latest $PROD_REPOSITORY_URI:$GITHUB_REF_NAME
          docker push $REPOSITORY_URI:$GITHUB_REF_NAME
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $PROD_REPOSITORY_URI
          docker push $PROD_REPOSITORY_URI:$GITHUB_REF_NAME